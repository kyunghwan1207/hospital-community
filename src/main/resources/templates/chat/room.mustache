<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<div class="chat">
    <form class="chat__write-message" onsubmit="Chat__writeMessage(this); return false;">
        <input type="text" placeholder="작성자" name="authorName">
        <input type="text" placeholder="내용을 입력해주세요." name="content">
        <input type="submit" value="작성">
    </form>
    <div class="chat__message-box">
        <ul class="chat__message-ul">

        </ul>
    </div>
</div>

</html>
<script>
    //==fetch 요청 함수==///
    function fetchPost(url, data) {
        return fetch(url, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            },
            body: JSON.stringify(data),
        })
            .then(response => response.json())
    }

    function fetchGet(url, data) {
        let query = Object.keys(data)
            .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(data[k]))
            .join('&');

        return fetch(url + "?" + query, {
            method: "GET",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        })
            .then(response => response.json())
    }

    //==채팅 작성 시작==//
    function Chat__submitWriteMessageForm(form) {
        // 입력란에 좌우에 존재하는 공백제거
        form.authorName.value = form.authorName.value.trim();

        if (form.authorName.value.length == 0) {
            form.authorName.focus();
            alert("작성자를 입력해주세요");

            return;
        }

        fetchPost("/api/v1/chat/write-message",
            {
                authorName: form.authorName.value,
                content: form.content.value
            }).then((date) => console.log(data));

        form.content.value = ""; // 입력한 비우기
        form.content.focus();
    }
    //==채팅 메시지 작성 끝==//

    //==채팅 메시지 읽기 시작==//
    // 현제 클라이언트가 받은 메시지 번호를 입력해야함
    // 그래야 메시지 요청시에 필요한 부분만 가져올 수 있다(매번 메시지 전체가져올 필요x)
    let Chat__lastLoadedId = 0;

    function Chat__loadMore() {
        fetchGet("/api/v1/chat/messages", {
            fromId: Chat__lastLoadedId
        })
            .then(body => {
                Chat__drawMessages(body.data.messages);
            });
    }

    const Chat__elMessageUl = document.querySelector('.chat__message-ul');

    function Chat__drawMessages(messages) {
        if (messages.length > 0) {
            // 메세지를 그리기 전에 Chat__lastLoadedUuid 변수를 갱신합니다.
            Chat__lastLoadedId = messages[messages.length - 1].id;
        }

        messages.forEach((message) => {
            Chat__elMessageUl
                .insertAdjacentHTML(
                    "afterBegin",
                    `<li>${message.authorName} : ${message.content}</li>`
                );
        });

        //Chat__loadMore(); // 즉시 실행
        setTimeout(Chat__loadMore, 500); // 지금은 아니고 0.5 초 후에 실행해라
    }

    Chat__loadMore();

    //==채팅 메시지들 읽기 끝==//
</script>